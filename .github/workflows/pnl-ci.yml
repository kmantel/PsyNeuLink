name: PsyNeuLink CI

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - 'docs/**'
      - 'doc_requirements.txt'
    tags-ignore:
      - 'v**'
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        python-architecture: ['x64']
        extra-args: ['']
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          # 3.7 is broken on macos-11, https://github.com/actions/virtual-environments/issues/4230
          - python-version: 3.7
            python-architecture: 'x64'
            os: macos-10.15
          # add 32-bit build on windows
          - python-version: 3.8
            python-architecture: 'x86'
            os: windows-latest
          # code-coverage build on macos python 3.9
          - python-version: 3.9
            os: macos-latest
            extra-args: '--cov=psyneulink'
        exclude:
          # 3.7 is broken on macos-11, https://github.com/actions/virtual-environments/issues/4230
          - python-version: 3.7
            os: macos-latest

    steps:
    # increased fetch-depth and tag checkout needed to get correct
    # version string from versioneer (must have history to a prior tag);
    # otherwise install fails due to circular dependency with modeci_mdf
    - name: Checkout sources
      uses: actions/checkout@v3
      with:
        fetch-depth: 200

    # fetch only master to avoid getting unneeded branches with
    # characters invalid on windows
    - name: Checkout tags
      run: git fetch --tags origin master

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-architecture }}

    - name: Get pip cache location
      shell: bash
      id: pip_cache
      run: |
        python -m pip install -U pip
        python -m pip --version
        echo ::set-output name=pip_cache_dir::$(python -m pip cache dir)

    - name: Wheels cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip_cache.outputs.pip_cache_dir }}/wheels
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ matrix.python-architecture }}-pip-wheels-v2-${{ github.sha }}
        restore-keys: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ matrix.python-architecture }}-pip-wheels-v2

    - name: Install local, editable PNL package
      uses: ./.github/actions/install-pnl
      with:
        features: 'dev'

    - name: Test with pytest
      timeout-minutes: 180
      run: pytest --junit-xml=tests_out.xml --verbosity=0 -n auto ${{ matrix.extra-args }} tests/mdf

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.python-architecture }}-${{ matrix.extra-args }}
        path: tests_out.xml
        retention-days: 5
      if: success() || failure()
