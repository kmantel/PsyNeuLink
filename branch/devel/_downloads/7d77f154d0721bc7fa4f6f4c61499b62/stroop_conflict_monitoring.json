{
    "Stroop_model": {
        "format": "ModECI MDF v0.3.3",
        "generating_application": "PsyNeuLink v0.10.0.0+489.g58e55963a3",
        "graphs": {
            "Stroop_model": {
                "conditions": {
                    "node_specific": {
                        "word_hidden": {
                            "type": "EveryNCalls",
                            "args": {
                                "dependency": "TASK",
                                "n": 10
                            }
                        },
                        "color_hidden": {
                            "type": "EveryNCalls",
                            "args": {
                                "dependency": "TASK",
                                "n": 10
                            }
                        },
                        "OUTPUT": {
                            "type": "All",
                            "args": {
                                "args": [
                                    {
                                        "type": "EveryNCalls",
                                        "args": {
                                            "dependency": "color_hidden",
                                            "n": 1
                                        }
                                    },
                                    {
                                        "type": "EveryNCalls",
                                        "args": {
                                            "dependency": "word_hidden",
                                            "n": 1
                                        }
                                    }
                                ]
                            }
                        },
                        "DECISION": {
                            "type": "EveryNCalls",
                            "args": {
                                "dependency": "OUTPUT",
                                "n": 1
                            }
                        }
                    },
                    "termination": {
                        "environment_sequence": {
                            "type": "Never",
                            "args": {}
                        },
                        "environment_state_update": {
                            "type": "AllHaveRun",
                            "args": {
                                "dependencies": []
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "Composition",
                    "results": [],
                    "input_specification": null,
                    "retain_old_simulation_data": false,
                    "simulation_results": [],
                    "variable": [
                        0
                    ],
                    "max_executions_before_finished": 1000,
                    "execute_until_finished": true,
                    "has_initializers": false,
                    "node_ordering": [
                        "color_input",
                        "color_hidden",
                        "OUTPUT",
                        "word_input",
                        "word_hidden",
                        "task_input",
                        "TASK",
                        "DECISION",
                        "Conflict_Monitor",
                        "CONTROL"
                    ],
                    "required_node_roles": [
                        [
                            "Conflict_Monitor",
                            "NodeRole.CONTROLLER_OBJECTIVE"
                        ]
                    ],
                    "controller": {
                        "CONTROL": {
                            "metadata": {
                                "type": "ControlMechanism",
                                "input_port_variables": null,
                                "output_labels_dict": {},
                                "variable": [
                                    [
                                        1.0
                                    ]
                                ],
                                "execute_until_finished": true,
                                "has_initializers": false,
                                "outcome": null,
                                "modulation": "multiplicative_param",
                                "simulation_ids": [],
                                "max_executions_before_finished": 1000,
                                "input_labels_dict": {},
                                "net_outcome": null,
                                "control_signal_costs": null,
                                "input_ports": [
                                    "OUTCOME"
                                ],
                                "outcome_input_ports": "[(InputPort OUTCOME)]",
                                "costs": null,
                                "compute_net_outcome": "gANjZGlsbC5fZGlsbApfY3JlYXRlX2Z1bmN0aW9uCnEAKGNkaWxsLl9kaWxsCl9jcmVhdGVfY29k\nZQpxAShLAksASwJLAktDQwh8AHwBGABTAHECToVxAylYBwAAAG91dGNvbWVxBFgEAAAAY29zdHEF\nhnEGWGwAAAAvaG9tZS9rYXRoZXJpbmUvY29kZS9Qc3lOZXVMaW5rL3BzeW5ldWxpbmsvY29yZS9j\nb21wb25lbnRzL21lY2hhbmlzbXMvbW9kdWxhdG9yeS9jb250cm9sL2NvbnRyb2xtZWNoYW5pc20u\ncHlxB1gIAAAAPGxhbWJkYT5xCE2cBEMAcQkpKXRxClJxC2Nwc3luZXVsaW5rLmNvcmUuY29tcG9u\nZW50cy5tZWNoYW5pc21zLm1vZHVsYXRvcnkuY29udHJvbC5jb250cm9sbWVjaGFuaXNtCl9fZGlj\ndF9fCmgITk59cQxOdHENUnEOLg==\n",
                                "objective_mechanism": {
                                    "Conflict_Monitor": {
                                        "metadata": {
                                            "type": "ObjectiveMechanism",
                                            "output_labels_dict": {},
                                            "variable": [
                                                [
                                                    0.0,
                                                    0.0
                                                ]
                                            ],
                                            "input_port_variables": null,
                                            "execute_until_finished": true,
                                            "max_executions_before_finished": 1000,
                                            "input_labels_dict": {},
                                            "has_initializers": false,
                                            "output_ports": [
                                                "OUTCOME"
                                            ],
                                            "input_ports": [
                                                {
                                                    "OUTPUT": {
                                                        "metadata": {
                                                            "type": "ProcessingMechanism",
                                                            "output_labels_dict": {},
                                                            "variable": [
                                                                [
                                                                    0.0,
                                                                    0.0
                                                                ]
                                                            ],
                                                            "input_port_variables": null,
                                                            "execute_until_finished": true,
                                                            "max_executions_before_finished": 1000,
                                                            "input_labels_dict": {},
                                                            "has_initializers": false,
                                                            "output_ports": null,
                                                            "input_ports": null
                                                        },
                                                        "input_ports": {
                                                            "OUTPUT_input_port_MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                                                                "shape": "(2,)",
                                                                "type": "float64"
                                                            },
                                                            "OUTPUT_input_port_MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                                                                "shape": "(2,)",
                                                                "type": "float64"
                                                            }
                                                        },
                                                        "functions": {
                                                            "OUTPUT_input_combination_function": {
                                                                "function": {
                                                                    "onnx::ReduceSum": {
                                                                        "data": "combination_function_input_data",
                                                                        "axes": 0
                                                                    }
                                                                },
                                                                "args": {
                                                                    "data": "combination_function_input_data",
                                                                    "axes": 0
                                                                }
                                                            },
                                                            "OUTPUT_input_combination_function_dimreduce": {
                                                                "value": "OUTPUT_input_combination_function[0][0]",
                                                                "args": {
                                                                    "variable0": "OUTPUT_input_combination_function"
                                                                }
                                                            },
                                                            "Logistic_Function_1": {
                                                                "function": {
                                                                    "logistic": {
                                                                        "offset": 0.0,
                                                                        "gain": 1.0,
                                                                        "scale": 1.0,
                                                                        "x_0": 0,
                                                                        "bias": 0.0,
                                                                        "variable0": "OUTPUT_input_combination_function_dimreduce"
                                                                    }
                                                                },
                                                                "args": {
                                                                    "offset": 0.0,
                                                                    "gain": 1.0,
                                                                    "scale": 1.0,
                                                                    "x_0": 0,
                                                                    "bias": 0.0,
                                                                    "variable0": "OUTPUT_input_combination_function_dimreduce"
                                                                },
                                                                "metadata": {
                                                                    "type": "Logistic",
                                                                    "variable": [
                                                                        [
                                                                            0.0,
                                                                            0.0
                                                                        ]
                                                                    ],
                                                                    "execute_until_finished": true,
                                                                    "has_initializers": false,
                                                                    "enable_output_type_conversion": true,
                                                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                                                    "changes_shape": false,
                                                                    "max_executions_before_finished": 1000,
                                                                    "bounds": [
                                                                        0,
                                                                        1
                                                                    ],
                                                                    "function_stateful_params": {}
                                                                }
                                                            }
                                                        },
                                                        "parameters": {
                                                            "combination_function_input_data": {
                                                                "value": "[OUTPUT_input_port_MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_, OUTPUT_input_port_MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_]"
                                                            }
                                                        },
                                                        "output_ports": {
                                                            "OUTPUT_OutputPort_0": {
                                                                "value": "Logistic_Function_1",
                                                                "metadata": {
                                                                    "type": "OutputPort",
                                                                    "variable": [
                                                                        0.5,
                                                                        0.5
                                                                    ],
                                                                    "execute_until_finished": true,
                                                                    "max_executions_before_finished": 1000,
                                                                    "has_initializers": false,
                                                                    "require_projection_in_composition": true,
                                                                    "projections": null
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "input_ports": {
                                            "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_": {
                                                "shape": "(1, 2)",
                                                "type": "float64",
                                                "metadata": {
                                                    "type": "InputPort",
                                                    "shadow_inputs": null,
                                                    "variable": [
                                                        [
                                                            0.0,
                                                            0.0
                                                        ]
                                                    ],
                                                    "execute_until_finished": true,
                                                    "max_executions_before_finished": 1000,
                                                    "has_initializers": false,
                                                    "internal_only": true,
                                                    "require_projection_in_composition": true,
                                                    "exponent": null,
                                                    "default_input": null,
                                                    "combine": null,
                                                    "projections": [
                                                        [
                                                            "OUTPUT.output_ports.OutputPort-0",
                                                            null,
                                                            null,
                                                            {
                                                                "PROJECTION_TYPE": "MappingProjection"
                                                            }
                                                        ]
                                                    ],
                                                    "weight": null
                                                }
                                            }
                                        },
                                        "functions": {
                                            "Stability_Function_0": {
                                                "function": {
                                                    "energy": {
                                                        "variable0": "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_"
                                                    }
                                                },
                                                "args": {
                                                    "variable0": "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_"
                                                },
                                                "metadata": {
                                                    "type": "Energy",
                                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                                    "variable": [
                                                        [
                                                            0.0,
                                                            0.0
                                                        ]
                                                    ],
                                                    "changes_shape": false,
                                                    "execute_until_finished": true,
                                                    "max_executions_before_finished": 1000,
                                                    "has_initializers": false,
                                                    "enable_output_type_conversion": true,
                                                    "metric_fct": {
                                                        "Distance_Function_4": {
                                                            "function": {
                                                                "distance": {}
                                                            },
                                                            "args": {},
                                                            "metadata": {
                                                                "type": "Distance",
                                                                "output_type": "FunctionOutputType.DEFAULT",
                                                                "variable": [
                                                                    [
                                                                        [
                                                                            0.0,
                                                                            0.0
                                                                        ]
                                                                    ],
                                                                    [
                                                                        [
                                                                            0.0,
                                                                            0.0
                                                                        ]
                                                                    ]
                                                                ],
                                                                "changes_shape": false,
                                                                "execute_until_finished": true,
                                                                "max_executions_before_finished": 1000,
                                                                "has_initializers": false,
                                                                "enable_output_type_conversion": false,
                                                                "metric": "energy",
                                                                "normalize": false,
                                                                "function_stateful_params": {}
                                                            }
                                                        }
                                                    },
                                                    "metric": "energy",
                                                    "matrix": [
                                                        [
                                                            0,
                                                            -2.5
                                                        ],
                                                        [
                                                            -2.5,
                                                            0
                                                        ]
                                                    ],
                                                    "transfer_fct": null,
                                                    "normalize": false,
                                                    "function_stateful_params": {}
                                                }
                                            }
                                        },
                                        "output_ports": {
                                            "Conflict_Monitor_OUTCOME": {
                                                "value": "Stability_Function_0",
                                                "metadata": {
                                                    "type": "OutputPort",
                                                    "variable": [
                                                        -0.0
                                                    ],
                                                    "execute_until_finished": true,
                                                    "max_executions_before_finished": 1000,
                                                    "has_initializers": false,
                                                    "require_projection_in_composition": true,
                                                    "projections": null
                                                }
                                            }
                                        }
                                    }
                                },
                                "output_ports": [
                                    {
                                        "name": "gain",
                                        "MECHANISM": {
                                            "TASK": {
                                                "metadata": {
                                                    "type": "LCAMechanism",
                                                    "input_port_variables": null,
                                                    "output_labels_dict": {},
                                                    "variable": [
                                                        [
                                                            0.0,
                                                            0.0
                                                        ]
                                                    ],
                                                    "execute_until_finished": true,
                                                    "has_initializers": false,
                                                    "termination_measure_value": 0.0,
                                                    "max_executions_before_finished": 1000,
                                                    "input_labels_dict": {},
                                                    "input_ports": null,
                                                    "matrix": "InverseHollowMatrix",
                                                    "integrator_function": {
                                                        "LeakyCompetingIntegrator_Function_0": {
                                                            "value": "previous_value + (-rate * previous_value + variable0) * time_step_size + noise * (time_step_size ** 0.5)",
                                                            "args": {
                                                                "time_step_size": 0.1,
                                                                "offset": 0.0,
                                                                "rate": 0.5,
                                                                "noise": 0.0
                                                            },
                                                            "metadata": {
                                                                "type": "LeakyCompetingIntegrator",
                                                                "initializer": [
                                                                    [
                                                                        0.5,
                                                                        0.5
                                                                    ]
                                                                ],
                                                                "variable": [
                                                                    [
                                                                        0.0,
                                                                        0.0
                                                                    ]
                                                                ],
                                                                "execute_until_finished": true,
                                                                "has_initializers": true,
                                                                "enable_output_type_conversion": false,
                                                                "output_type": "FunctionOutputType.DEFAULT",
                                                                "changes_shape": false,
                                                                "max_executions_before_finished": 1000,
                                                                "function_stateful_params": {
                                                                    "previous_value": {
                                                                        "id": "previous_value",
                                                                        "default_initial_value": [
                                                                            [
                                                                                0.5,
                                                                                0.5
                                                                            ]
                                                                        ],
                                                                        "value": "LeakyCompetingIntegrator_Function_0"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "combination_function": {
                                                        "LinearCombination_Function_23": {
                                                            "function": {
                                                                "linearcombination": {
                                                                    "offset": 0.0,
                                                                    "scale": 1.0
                                                                }
                                                            },
                                                            "args": {
                                                                "offset": 0.0,
                                                                "scale": 1.0
                                                            },
                                                            "metadata": {
                                                                "type": "LinearCombination",
                                                                "variable": [
                                                                    [
                                                                        0.0,
                                                                        0.0
                                                                    ]
                                                                ],
                                                                "execute_until_finished": true,
                                                                "has_initializers": false,
                                                                "enable_output_type_conversion": false,
                                                                "output_type": "FunctionOutputType.DEFAULT",
                                                                "changes_shape": false,
                                                                "max_executions_before_finished": 1000,
                                                                "exponents": null,
                                                                "weights": null,
                                                                "operation": "sum",
                                                                "function_stateful_params": {}
                                                            }
                                                        }
                                                    },
                                                    "integrator_mode": true,
                                                    "has_recurrent_input_port": false,
                                                    "on_resume_integrator_mode": "current_value",
                                                    "clip": null,
                                                    "output_ports": [
                                                        "RESULTS"
                                                    ],
                                                    "enable_learning": false,
                                                    "integrator_function_value": [
                                                        [
                                                            0
                                                        ]
                                                    ],
                                                    "termination_comparison_op": ">=",
                                                    "termination_threshold": null,
                                                    "termination_measure": "max"
                                                },
                                                "input_ports": {
                                                    "TASK_input_port_TASK_recurrent_projection": {
                                                        "shape": "(2,)",
                                                        "type": "float64"
                                                    },
                                                    "TASK_input_port_MappingProjection_from_task_input_OutputPort_0__to_TASK_InputPort_0_": {
                                                        "shape": "(2,)",
                                                        "type": "float64"
                                                    }
                                                },
                                                "functions": {
                                                    "TASK_input_combination_function": {
                                                        "function": {
                                                            "onnx::ReduceSum": {
                                                                "data": "combination_function_input_data",
                                                                "axes": 0
                                                            }
                                                        },
                                                        "args": {
                                                            "data": "combination_function_input_data",
                                                            "axes": 0
                                                        }
                                                    },
                                                    "TASK_input_combination_function_dimreduce": {
                                                        "value": "TASK_input_combination_function[0][0]",
                                                        "args": {
                                                            "variable0": "TASK_input_combination_function"
                                                        }
                                                    },
                                                    "Logistic_Function_5": {
                                                        "function": {
                                                            "logistic": {
                                                                "offset": 0.0,
                                                                "gain": 1.0,
                                                                "scale": 1.0,
                                                                "x_0": 0,
                                                                "bias": 0.0,
                                                                "variable0": "LeakyCompetingIntegrator_Function_0"
                                                            }
                                                        },
                                                        "args": {
                                                            "offset": 0.0,
                                                            "gain": 1.0,
                                                            "scale": 1.0,
                                                            "x_0": 0,
                                                            "bias": 0.0,
                                                            "variable0": "LeakyCompetingIntegrator_Function_0"
                                                        },
                                                        "metadata": {
                                                            "type": "Logistic",
                                                            "variable": [
                                                                [
                                                                    0.0,
                                                                    0.0
                                                                ]
                                                            ],
                                                            "execute_until_finished": true,
                                                            "has_initializers": false,
                                                            "enable_output_type_conversion": true,
                                                            "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                                            "changes_shape": false,
                                                            "max_executions_before_finished": 1000,
                                                            "bounds": [
                                                                0,
                                                                1
                                                            ],
                                                            "function_stateful_params": {}
                                                        }
                                                    },
                                                    "LeakyCompetingIntegrator_Function_0": {
                                                        "value": "previous_value + (-0.5 * previous_value + TASK_input_combination_function_dimreduce) * 0.1 + 0.0 * (0.1 ** 0.5)",
                                                        "args": {
                                                            "time_step_size": 0.1,
                                                            "offset": 0.0,
                                                            "rate": 0.5,
                                                            "noise": 0.0,
                                                            "variable0": "TASK_input_combination_function_dimreduce"
                                                        },
                                                        "metadata": {
                                                            "type": "LeakyCompetingIntegrator",
                                                            "initializer": [
                                                                [
                                                                    0.5,
                                                                    0.5
                                                                ]
                                                            ],
                                                            "variable": [
                                                                [
                                                                    0.0,
                                                                    0.0
                                                                ]
                                                            ],
                                                            "execute_until_finished": true,
                                                            "has_initializers": true,
                                                            "enable_output_type_conversion": false,
                                                            "output_type": "FunctionOutputType.DEFAULT",
                                                            "changes_shape": false,
                                                            "max_executions_before_finished": 1000,
                                                            "function_stateful_params": {
                                                                "previous_value": {
                                                                    "id": "previous_value",
                                                                    "default_initial_value": [
                                                                        [
                                                                            0.5,
                                                                            0.5
                                                                        ]
                                                                    ],
                                                                    "value": "LeakyCompetingIntegrator_Function_0"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "parameters": {
                                                    "hetero": {
                                                        "value": -1.0
                                                    },
                                                    "smoothing_factor": {
                                                        "value": 0.5
                                                    },
                                                    "auto": {
                                                        "value": 0.0
                                                    },
                                                    "competition": {
                                                        "value": 1.0
                                                    },
                                                    "combination_function_input_data": {
                                                        "value": "[TASK_input_port_TASK_recurrent_projection, TASK_input_port_MappingProjection_from_task_input_OutputPort_0__to_TASK_InputPort_0_]"
                                                    },
                                                    "previous_value": {
                                                        "default_initial_value": [
                                                            [
                                                                0.5,
                                                                0.5
                                                            ]
                                                        ],
                                                        "value": "LeakyCompetingIntegrator_Function_0"
                                                    }
                                                },
                                                "output_ports": {
                                                    "TASK_RESULT": {
                                                        "value": "Logistic_Function_5",
                                                        "metadata": {
                                                            "type": "OutputPort",
                                                            "variable": [
                                                                0.5,
                                                                0.5
                                                            ],
                                                            "execute_until_finished": true,
                                                            "max_executions_before_finished": 1000,
                                                            "has_initializers": false,
                                                            "require_projection_in_composition": true,
                                                            "projections": null
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ],
                                "default_allocation": [
                                    0.5
                                ],
                                "reconfiguration_cost": null,
                                "outcome_input_ports_option": "separate",
                                "combine_costs": "gANjbnVtcHkKc3VtCnEALg==\n",
                                "compute_reconfiguration_cost": null,
                                "monitor_for_control": []
                            },
                            "input_ports": {
                                "CONTROL_OUTCOME": {
                                    "shape": "(1,)",
                                    "type": "float64",
                                    "metadata": {
                                        "type": "InputPort",
                                        "shadow_inputs": null,
                                        "variable": [
                                            0.0
                                        ],
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "internal_only": true,
                                        "require_projection_in_composition": true,
                                        "exponent": null,
                                        "default_input": null,
                                        "combine": null,
                                        "projections": null,
                                        "weight": null
                                    }
                                }
                            },
                            "functions": {
                                "Default_Control_Function_0": {
                                    "function": {
                                        "defaultallocationfunction": {
                                            "num_control_signals": 1,
                                            "variable0": "CONTROL_OUTCOME"
                                        }
                                    },
                                    "args": {
                                        "num_control_signals": 1,
                                        "variable0": "CONTROL_OUTCOME"
                                    },
                                    "metadata": {
                                        "type": "DefaultAllocationFunction",
                                        "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                        "variable": [
                                            [
                                                1.0
                                            ]
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": true,
                                        "function_stateful_params": {}
                                    }
                                }
                            },
                            "output_ports": {
                                "CONTROL_TASK_gain__ControlSignal": {
                                    "value": "Default_Control_Function_0",
                                    "metadata": {
                                        "type": "ControlSignal",
                                        "require_projection_in_composition": true,
                                        "variable": [
                                            0.5
                                        ],
                                        "execute_until_finished": true,
                                        "has_initializers": false,
                                        "max_executions_before_finished": 1000,
                                        "projections": [
                                            [
                                                "TASK.input_ports.gain",
                                                null,
                                                null,
                                                {
                                                    "PROJECTION_TYPE": "ControlProjection"
                                                }
                                            ]
                                        ],
                                        "modulation": "multiplicative_param",
                                        "allocation_samples": null
                                    }
                                }
                            }
                        }
                    }
                },
                "nodes": {
                    "color_input": {
                        "metadata": {
                            "type": "ProcessingMechanism",
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    0.0,
                                    0.0
                                ]
                            ],
                            "input_port_variables": null,
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "has_initializers": false,
                            "output_ports": null,
                            "input_ports": null
                        },
                        "input_ports": {
                            "color_input_InputPort_0": {
                                "shape": "(2,)",
                                "type": "float64",
                                "metadata": {
                                    "type": "InputPort",
                                    "shadow_inputs": null,
                                    "variable": [
                                        0.0,
                                        0.0
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "internal_only": false,
                                    "require_projection_in_composition": true,
                                    "exponent": null,
                                    "default_input": null,
                                    "combine": null,
                                    "projections": null,
                                    "weight": null
                                }
                            }
                        },
                        "functions": {
                            "Linear_Function_3": {
                                "function": {
                                    "linear": {
                                        "slope": 1.0,
                                        "intercept": 0.0,
                                        "variable0": "color_input_InputPort_0"
                                    }
                                },
                                "args": {
                                    "slope": 1.0,
                                    "intercept": 0.0,
                                    "variable0": "color_input_InputPort_0"
                                },
                                "metadata": {
                                    "type": "Linear",
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "changes_shape": false,
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "bounds": null,
                                    "function_stateful_params": {}
                                }
                            }
                        },
                        "output_ports": {
                            "color_input_OutputPort_0": {
                                "value": "Linear_Function_3",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        0.0,
                                        0.0
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            }
                        }
                    },
                    "color_hidden": {
                        "metadata": {
                            "type": "ProcessingMechanism",
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    0.0,
                                    0.0
                                ]
                            ],
                            "input_port_variables": null,
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "has_initializers": false,
                            "output_ports": null,
                            "input_ports": null
                        },
                        "input_ports": {
                            "color_hidden_input_port_MappingProjection_from_color_input_OutputPort_0__to_color_hidden_InputPort_0_": {
                                "shape": "(2,)",
                                "type": "float64"
                            },
                            "color_hidden_input_port_MappingProjection_from_TASK_RESULT__to_color_hidden_InputPort_0_": {
                                "shape": "(2,)",
                                "type": "float64"
                            }
                        },
                        "functions": {
                            "color_hidden_input_combination_function": {
                                "function": {
                                    "onnx::ReduceSum": {
                                        "data": "combination_function_input_data",
                                        "axes": 0
                                    }
                                },
                                "args": {
                                    "data": "combination_function_input_data",
                                    "axes": 0
                                }
                            },
                            "color_hidden_input_combination_function_dimreduce": {
                                "value": "color_hidden_input_combination_function[0][0]",
                                "args": {
                                    "variable0": "color_hidden_input_combination_function"
                                }
                            },
                            "Logistic_Function_0": {
                                "function": {
                                    "logistic": {
                                        "offset": 0.0,
                                        "gain": 1.0,
                                        "scale": 1.0,
                                        "x_0": 0,
                                        "bias": -4.0,
                                        "variable0": "color_hidden_input_combination_function_dimreduce"
                                    }
                                },
                                "args": {
                                    "offset": 0.0,
                                    "gain": 1.0,
                                    "scale": 1.0,
                                    "x_0": 0,
                                    "bias": -4.0,
                                    "variable0": "color_hidden_input_combination_function_dimreduce"
                                },
                                "metadata": {
                                    "type": "Logistic",
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "execute_until_finished": true,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "changes_shape": false,
                                    "max_executions_before_finished": 1000,
                                    "bounds": [
                                        0,
                                        1
                                    ],
                                    "function_stateful_params": {}
                                }
                            }
                        },
                        "parameters": {
                            "combination_function_input_data": {
                                "value": "[color_hidden_input_port_MappingProjection_from_color_input_OutputPort_0__to_color_hidden_InputPort_0_, color_hidden_input_port_MappingProjection_from_TASK_RESULT__to_color_hidden_InputPort_0_]"
                            }
                        },
                        "output_ports": {
                            "color_hidden_OutputPort_0": {
                                "value": "Logistic_Function_0",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        0.017986209962091562,
                                        0.017986209962091562
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            }
                        }
                    },
                    "OUTPUT": {
                        "metadata": {
                            "type": "ProcessingMechanism",
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    0.0,
                                    0.0
                                ]
                            ],
                            "input_port_variables": null,
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "has_initializers": false,
                            "output_ports": null,
                            "input_ports": null
                        },
                        "input_ports": {
                            "OUTPUT_input_port_MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                                "shape": "(2,)",
                                "type": "float64"
                            },
                            "OUTPUT_input_port_MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                                "shape": "(2,)",
                                "type": "float64"
                            }
                        },
                        "functions": {
                            "OUTPUT_input_combination_function": {
                                "function": {
                                    "onnx::ReduceSum": {
                                        "data": "combination_function_input_data",
                                        "axes": 0
                                    }
                                },
                                "args": {
                                    "data": "combination_function_input_data",
                                    "axes": 0
                                }
                            },
                            "OUTPUT_input_combination_function_dimreduce": {
                                "value": "OUTPUT_input_combination_function[0][0]",
                                "args": {
                                    "variable0": "OUTPUT_input_combination_function"
                                }
                            },
                            "Logistic_Function_1": {
                                "function": {
                                    "logistic": {
                                        "offset": 0.0,
                                        "gain": 1.0,
                                        "scale": 1.0,
                                        "x_0": 0,
                                        "bias": 0.0,
                                        "variable0": "OUTPUT_input_combination_function_dimreduce"
                                    }
                                },
                                "args": {
                                    "offset": 0.0,
                                    "gain": 1.0,
                                    "scale": 1.0,
                                    "x_0": 0,
                                    "bias": 0.0,
                                    "variable0": "OUTPUT_input_combination_function_dimreduce"
                                },
                                "metadata": {
                                    "type": "Logistic",
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "execute_until_finished": true,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "changes_shape": false,
                                    "max_executions_before_finished": 1000,
                                    "bounds": [
                                        0,
                                        1
                                    ],
                                    "function_stateful_params": {}
                                }
                            }
                        },
                        "parameters": {
                            "combination_function_input_data": {
                                "value": "[OUTPUT_input_port_MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_, OUTPUT_input_port_MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_]"
                            }
                        },
                        "output_ports": {
                            "OUTPUT_OutputPort_0": {
                                "value": "Logistic_Function_1",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        0.5,
                                        0.5
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            }
                        }
                    },
                    "word_input": {
                        "metadata": {
                            "type": "ProcessingMechanism",
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    0.0,
                                    0.0
                                ]
                            ],
                            "input_port_variables": null,
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "has_initializers": false,
                            "output_ports": null,
                            "input_ports": null
                        },
                        "input_ports": {
                            "word_input_InputPort_0": {
                                "shape": "(2,)",
                                "type": "float64",
                                "metadata": {
                                    "type": "InputPort",
                                    "shadow_inputs": null,
                                    "variable": [
                                        0.0,
                                        0.0
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "internal_only": false,
                                    "require_projection_in_composition": true,
                                    "exponent": null,
                                    "default_input": null,
                                    "combine": null,
                                    "projections": null,
                                    "weight": null
                                }
                            }
                        },
                        "functions": {
                            "Linear_Function_22": {
                                "function": {
                                    "linear": {
                                        "slope": 1.0,
                                        "intercept": 0.0,
                                        "variable0": "word_input_InputPort_0"
                                    }
                                },
                                "args": {
                                    "slope": 1.0,
                                    "intercept": 0.0,
                                    "variable0": "word_input_InputPort_0"
                                },
                                "metadata": {
                                    "type": "Linear",
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "changes_shape": false,
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "bounds": null,
                                    "function_stateful_params": {}
                                }
                            }
                        },
                        "output_ports": {
                            "word_input_OutputPort_0": {
                                "value": "Linear_Function_22",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        0.0,
                                        0.0
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            }
                        }
                    },
                    "word_hidden": {
                        "metadata": {
                            "type": "ProcessingMechanism",
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    0.0,
                                    0.0
                                ]
                            ],
                            "input_port_variables": null,
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "has_initializers": false,
                            "output_ports": null,
                            "input_ports": null
                        },
                        "input_ports": {
                            "word_hidden_input_port_MappingProjection_from_word_input_OutputPort_0__to_word_hidden_InputPort_0_": {
                                "shape": "(2,)",
                                "type": "float64"
                            },
                            "word_hidden_input_port_MappingProjection_from_TASK_RESULT__to_word_hidden_InputPort_0_": {
                                "shape": "(2,)",
                                "type": "float64"
                            }
                        },
                        "functions": {
                            "word_hidden_input_combination_function": {
                                "function": {
                                    "onnx::ReduceSum": {
                                        "data": "combination_function_input_data",
                                        "axes": 0
                                    }
                                },
                                "args": {
                                    "data": "combination_function_input_data",
                                    "axes": 0
                                }
                            },
                            "word_hidden_input_combination_function_dimreduce": {
                                "value": "word_hidden_input_combination_function[0][0]",
                                "args": {
                                    "variable0": "word_hidden_input_combination_function"
                                }
                            },
                            "Logistic_Function_2": {
                                "function": {
                                    "logistic": {
                                        "offset": 0.0,
                                        "gain": 1.0,
                                        "scale": 1.0,
                                        "x_0": 0,
                                        "bias": -4.0,
                                        "variable0": "word_hidden_input_combination_function_dimreduce"
                                    }
                                },
                                "args": {
                                    "offset": 0.0,
                                    "gain": 1.0,
                                    "scale": 1.0,
                                    "x_0": 0,
                                    "bias": -4.0,
                                    "variable0": "word_hidden_input_combination_function_dimreduce"
                                },
                                "metadata": {
                                    "type": "Logistic",
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "execute_until_finished": true,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "changes_shape": false,
                                    "max_executions_before_finished": 1000,
                                    "bounds": [
                                        0,
                                        1
                                    ],
                                    "function_stateful_params": {}
                                }
                            }
                        },
                        "parameters": {
                            "combination_function_input_data": {
                                "value": "[word_hidden_input_port_MappingProjection_from_word_input_OutputPort_0__to_word_hidden_InputPort_0_, word_hidden_input_port_MappingProjection_from_TASK_RESULT__to_word_hidden_InputPort_0_]"
                            }
                        },
                        "output_ports": {
                            "word_hidden_OutputPort_0": {
                                "value": "Logistic_Function_2",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        0.017986209962091562,
                                        0.017986209962091562
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            }
                        }
                    },
                    "task_input": {
                        "metadata": {
                            "type": "ProcessingMechanism",
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    0.0,
                                    0.0
                                ]
                            ],
                            "input_port_variables": null,
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "has_initializers": false,
                            "output_ports": null,
                            "input_ports": null
                        },
                        "input_ports": {
                            "task_input_InputPort_0": {
                                "shape": "(2,)",
                                "type": "float64",
                                "metadata": {
                                    "type": "InputPort",
                                    "shadow_inputs": null,
                                    "variable": [
                                        0.0,
                                        0.0
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "internal_only": false,
                                    "require_projection_in_composition": true,
                                    "exponent": null,
                                    "default_input": null,
                                    "combine": null,
                                    "projections": null,
                                    "weight": null
                                }
                            }
                        },
                        "functions": {
                            "Linear_Function_34": {
                                "function": {
                                    "linear": {
                                        "slope": 1.0,
                                        "intercept": 0.0,
                                        "variable0": "task_input_InputPort_0"
                                    }
                                },
                                "args": {
                                    "slope": 1.0,
                                    "intercept": 0.0,
                                    "variable0": "task_input_InputPort_0"
                                },
                                "metadata": {
                                    "type": "Linear",
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "changes_shape": false,
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "bounds": null,
                                    "function_stateful_params": {}
                                }
                            }
                        },
                        "output_ports": {
                            "task_input_OutputPort_0": {
                                "value": "Linear_Function_34",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        0.0,
                                        0.0
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            }
                        }
                    },
                    "TASK": {
                        "metadata": {
                            "type": "LCAMechanism",
                            "input_port_variables": null,
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    0.0,
                                    0.0
                                ]
                            ],
                            "execute_until_finished": true,
                            "has_initializers": false,
                            "termination_measure_value": 0.0,
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "input_ports": null,
                            "matrix": "InverseHollowMatrix",
                            "integrator_function": {
                                "LeakyCompetingIntegrator_Function_0": {
                                    "value": "previous_value + (-rate * previous_value + variable0) * time_step_size + noise * (time_step_size ** 0.5)",
                                    "args": {
                                        "time_step_size": 0.1,
                                        "offset": 0.0,
                                        "rate": 0.5,
                                        "noise": 0.0
                                    },
                                    "metadata": {
                                        "type": "LeakyCompetingIntegrator",
                                        "initializer": [
                                            [
                                                0.5,
                                                0.5
                                            ]
                                        ],
                                        "variable": [
                                            [
                                                0.0,
                                                0.0
                                            ]
                                        ],
                                        "execute_until_finished": true,
                                        "has_initializers": true,
                                        "enable_output_type_conversion": false,
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "changes_shape": false,
                                        "max_executions_before_finished": 1000,
                                        "function_stateful_params": {
                                            "previous_value": {
                                                "id": "previous_value",
                                                "default_initial_value": [
                                                    [
                                                        0.5,
                                                        0.5
                                                    ]
                                                ],
                                                "value": "LeakyCompetingIntegrator_Function_0"
                                            }
                                        }
                                    }
                                }
                            },
                            "combination_function": {
                                "LinearCombination_Function_23": {
                                    "function": {
                                        "linearcombination": {
                                            "offset": 0.0,
                                            "scale": 1.0
                                        }
                                    },
                                    "args": {
                                        "offset": 0.0,
                                        "scale": 1.0
                                    },
                                    "metadata": {
                                        "type": "LinearCombination",
                                        "variable": [
                                            [
                                                0.0,
                                                0.0
                                            ]
                                        ],
                                        "execute_until_finished": true,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "changes_shape": false,
                                        "max_executions_before_finished": 1000,
                                        "exponents": null,
                                        "weights": null,
                                        "operation": "sum",
                                        "function_stateful_params": {}
                                    }
                                }
                            },
                            "integrator_mode": true,
                            "has_recurrent_input_port": false,
                            "on_resume_integrator_mode": "current_value",
                            "clip": null,
                            "output_ports": [
                                "RESULTS"
                            ],
                            "enable_learning": false,
                            "integrator_function_value": [
                                [
                                    0
                                ]
                            ],
                            "termination_comparison_op": ">=",
                            "termination_threshold": null,
                            "termination_measure": "max"
                        },
                        "input_ports": {
                            "TASK_input_port_TASK_recurrent_projection": {
                                "shape": "(2,)",
                                "type": "float64"
                            },
                            "TASK_input_port_MappingProjection_from_task_input_OutputPort_0__to_TASK_InputPort_0_": {
                                "shape": "(2,)",
                                "type": "float64"
                            }
                        },
                        "functions": {
                            "TASK_input_combination_function": {
                                "function": {
                                    "onnx::ReduceSum": {
                                        "data": "combination_function_input_data",
                                        "axes": 0
                                    }
                                },
                                "args": {
                                    "data": "combination_function_input_data",
                                    "axes": 0
                                }
                            },
                            "TASK_input_combination_function_dimreduce": {
                                "value": "TASK_input_combination_function[0][0]",
                                "args": {
                                    "variable0": "TASK_input_combination_function"
                                }
                            },
                            "Logistic_Function_5": {
                                "function": {
                                    "logistic": {
                                        "offset": 0.0,
                                        "gain": 1.0,
                                        "scale": 1.0,
                                        "x_0": 0,
                                        "bias": 0.0,
                                        "variable0": "LeakyCompetingIntegrator_Function_0"
                                    }
                                },
                                "args": {
                                    "offset": 0.0,
                                    "gain": 1.0,
                                    "scale": 1.0,
                                    "x_0": 0,
                                    "bias": 0.0,
                                    "variable0": "LeakyCompetingIntegrator_Function_0"
                                },
                                "metadata": {
                                    "type": "Logistic",
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "execute_until_finished": true,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "changes_shape": false,
                                    "max_executions_before_finished": 1000,
                                    "bounds": [
                                        0,
                                        1
                                    ],
                                    "function_stateful_params": {}
                                }
                            },
                            "LeakyCompetingIntegrator_Function_0": {
                                "value": "previous_value + (-0.5 * previous_value + TASK_input_combination_function_dimreduce) * 0.1 + 0.0 * (0.1 ** 0.5)",
                                "args": {
                                    "time_step_size": 0.1,
                                    "offset": 0.0,
                                    "rate": 0.5,
                                    "noise": 0.0,
                                    "variable0": "TASK_input_combination_function_dimreduce"
                                },
                                "metadata": {
                                    "type": "LeakyCompetingIntegrator",
                                    "initializer": [
                                        [
                                            0.5,
                                            0.5
                                        ]
                                    ],
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "execute_until_finished": true,
                                    "has_initializers": true,
                                    "enable_output_type_conversion": false,
                                    "output_type": "FunctionOutputType.DEFAULT",
                                    "changes_shape": false,
                                    "max_executions_before_finished": 1000,
                                    "function_stateful_params": {
                                        "previous_value": {
                                            "id": "previous_value",
                                            "default_initial_value": [
                                                [
                                                    0.5,
                                                    0.5
                                                ]
                                            ],
                                            "value": "LeakyCompetingIntegrator_Function_0"
                                        }
                                    }
                                }
                            }
                        },
                        "parameters": {
                            "hetero": {
                                "value": -1.0
                            },
                            "smoothing_factor": {
                                "value": 0.5
                            },
                            "auto": {
                                "value": 0.0
                            },
                            "competition": {
                                "value": 1.0
                            },
                            "combination_function_input_data": {
                                "value": "[TASK_input_port_TASK_recurrent_projection, TASK_input_port_MappingProjection_from_task_input_OutputPort_0__to_TASK_InputPort_0_]"
                            },
                            "previous_value": {
                                "default_initial_value": [
                                    [
                                        0.5,
                                        0.5
                                    ]
                                ],
                                "value": "LeakyCompetingIntegrator_Function_0"
                            }
                        },
                        "output_ports": {
                            "TASK_RESULT": {
                                "value": "Logistic_Function_5",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        0.5,
                                        0.5
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            }
                        }
                    },
                    "DECISION": {
                        "metadata": {
                            "type": "DDM",
                            "input_port_variables": null,
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    0.0
                                ]
                            ],
                            "execute_until_finished": true,
                            "has_initializers": false,
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "input_ports": [
                                {
                                    "name": "ARRAY",
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "function": {
                                        "Reduce_Function_0_2": {
                                            "function": {
                                                "reduce": {
                                                    "offset": 0.0,
                                                    "scale": 1.0
                                                }
                                            },
                                            "args": {
                                                "offset": 0.0,
                                                "scale": 1.0
                                            },
                                            "metadata": {
                                                "type": "Reduce",
                                                "variable": [
                                                    0
                                                ],
                                                "execute_until_finished": true,
                                                "has_initializers": false,
                                                "enable_output_type_conversion": false,
                                                "output_type": "FunctionOutputType.DEFAULT",
                                                "changes_shape": true,
                                                "max_executions_before_finished": 1000,
                                                "exponents": null,
                                                "weights": [
                                                    1,
                                                    -1
                                                ],
                                                "operation": "sum",
                                                "function_stateful_params": {}
                                            }
                                        }
                                    }
                                }
                            ],
                            "random_state": null,
                            "input_format": "SCALAR",
                            "output_ports": [
                                "DECISION_VARIABLE",
                                "RESPONSE_TIME"
                            ]
                        },
                        "input_ports": {
                            "DECISION_ARRAY": {
                                "shape": "(1, 2)",
                                "type": "float64",
                                "metadata": {
                                    "type": "InputPort",
                                    "shadow_inputs": null,
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "internal_only": false,
                                    "require_projection_in_composition": true,
                                    "exponent": null,
                                    "default_input": null,
                                    "combine": null,
                                    "projections": null,
                                    "weight": null
                                }
                            }
                        },
                        "functions": {
                            "Drift_Diffusion_Analytical_Function_0_3": {
                                "function": {
                                    "driftdiffusionanalytical": {
                                        "drift_rate": 1.0,
                                        "threshold": 1.0,
                                        "non_decision_time": 0.2,
                                        "starting_value": 0.0,
                                        "bias": 0.5,
                                        "noise": 0.5,
                                        "shape": [
                                            1,
                                            1
                                        ],
                                        "variable0": "DECISION_ARRAY"
                                    }
                                },
                                "args": {
                                    "drift_rate": 1.0,
                                    "threshold": 1.0,
                                    "non_decision_time": 0.2,
                                    "starting_value": 0.0,
                                    "bias": 0.5,
                                    "noise": 0.5,
                                    "shape": [
                                        1,
                                        1
                                    ],
                                    "variable0": "DECISION_ARRAY"
                                },
                                "metadata": {
                                    "type": "DriftDiffusionAnalytical",
                                    "variable": [
                                        [
                                            0.0
                                        ]
                                    ],
                                    "execute_until_finished": true,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "changes_shape": false,
                                    "max_executions_before_finished": 1000,
                                    "function_stateful_params": {}
                                }
                            }
                        },
                        "parameters": {
                            "initializer": {
                                "value": [
                                    [
                                        0
                                    ]
                                ]
                            },
                            "seed": {
                                "value": -1
                            }
                        },
                        "output_ports": {
                            "DECISION_DECISION_VARIABLE": {
                                "value": "Drift_Diffusion_Analytical_Function_0_3[0]",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        1.0
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            },
                            "DECISION_RESPONSE_TIME": {
                                "value": "Drift_Diffusion_Analytical_Function_0_3[1]",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        4.2
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            }
                        }
                    },
                    "Conflict_Monitor": {
                        "metadata": {
                            "type": "ObjectiveMechanism",
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    0.0,
                                    0.0
                                ]
                            ],
                            "input_port_variables": null,
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "has_initializers": false,
                            "output_ports": [
                                "OUTCOME"
                            ],
                            "input_ports": [
                                {
                                    "OUTPUT": {
                                        "metadata": {
                                            "type": "ProcessingMechanism",
                                            "output_labels_dict": {},
                                            "variable": [
                                                [
                                                    0.0,
                                                    0.0
                                                ]
                                            ],
                                            "input_port_variables": null,
                                            "execute_until_finished": true,
                                            "max_executions_before_finished": 1000,
                                            "input_labels_dict": {},
                                            "has_initializers": false,
                                            "output_ports": null,
                                            "input_ports": null
                                        },
                                        "input_ports": {
                                            "OUTPUT_input_port_MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                                                "shape": "(2,)",
                                                "type": "float64"
                                            },
                                            "OUTPUT_input_port_MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                                                "shape": "(2,)",
                                                "type": "float64"
                                            }
                                        },
                                        "functions": {
                                            "OUTPUT_input_combination_function": {
                                                "function": {
                                                    "onnx::ReduceSum": {
                                                        "data": "combination_function_input_data",
                                                        "axes": 0
                                                    }
                                                },
                                                "args": {
                                                    "data": "combination_function_input_data",
                                                    "axes": 0
                                                }
                                            },
                                            "OUTPUT_input_combination_function_dimreduce": {
                                                "value": "OUTPUT_input_combination_function[0][0]",
                                                "args": {
                                                    "variable0": "OUTPUT_input_combination_function"
                                                }
                                            },
                                            "Logistic_Function_1": {
                                                "function": {
                                                    "logistic": {
                                                        "offset": 0.0,
                                                        "gain": 1.0,
                                                        "scale": 1.0,
                                                        "x_0": 0,
                                                        "bias": 0.0,
                                                        "variable0": "OUTPUT_input_combination_function_dimreduce"
                                                    }
                                                },
                                                "args": {
                                                    "offset": 0.0,
                                                    "gain": 1.0,
                                                    "scale": 1.0,
                                                    "x_0": 0,
                                                    "bias": 0.0,
                                                    "variable0": "OUTPUT_input_combination_function_dimreduce"
                                                },
                                                "metadata": {
                                                    "type": "Logistic",
                                                    "variable": [
                                                        [
                                                            0.0,
                                                            0.0
                                                        ]
                                                    ],
                                                    "execute_until_finished": true,
                                                    "has_initializers": false,
                                                    "enable_output_type_conversion": true,
                                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                                    "changes_shape": false,
                                                    "max_executions_before_finished": 1000,
                                                    "bounds": [
                                                        0,
                                                        1
                                                    ],
                                                    "function_stateful_params": {}
                                                }
                                            }
                                        },
                                        "parameters": {
                                            "combination_function_input_data": {
                                                "value": "[OUTPUT_input_port_MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_, OUTPUT_input_port_MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_]"
                                            }
                                        },
                                        "output_ports": {
                                            "OUTPUT_OutputPort_0": {
                                                "value": "Logistic_Function_1",
                                                "metadata": {
                                                    "type": "OutputPort",
                                                    "variable": [
                                                        0.5,
                                                        0.5
                                                    ],
                                                    "execute_until_finished": true,
                                                    "max_executions_before_finished": 1000,
                                                    "has_initializers": false,
                                                    "require_projection_in_composition": true,
                                                    "projections": null
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "input_ports": {
                            "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_": {
                                "shape": "(1, 2)",
                                "type": "float64",
                                "metadata": {
                                    "type": "InputPort",
                                    "shadow_inputs": null,
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "internal_only": true,
                                    "require_projection_in_composition": true,
                                    "exponent": null,
                                    "default_input": null,
                                    "combine": null,
                                    "projections": [
                                        [
                                            "OUTPUT.output_ports.OutputPort-0",
                                            null,
                                            null,
                                            {
                                                "PROJECTION_TYPE": "MappingProjection"
                                            }
                                        ]
                                    ],
                                    "weight": null
                                }
                            }
                        },
                        "functions": {
                            "Stability_Function_0": {
                                "function": {
                                    "energy": {
                                        "variable0": "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_"
                                    }
                                },
                                "args": {
                                    "variable0": "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_"
                                },
                                "metadata": {
                                    "type": "Energy",
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "variable": [
                                        [
                                            0.0,
                                            0.0
                                        ]
                                    ],
                                    "changes_shape": false,
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "metric_fct": {
                                        "Distance_Function_4": {
                                            "function": {
                                                "distance": {}
                                            },
                                            "args": {},
                                            "metadata": {
                                                "type": "Distance",
                                                "output_type": "FunctionOutputType.DEFAULT",
                                                "variable": [
                                                    [
                                                        [
                                                            0.0,
                                                            0.0
                                                        ]
                                                    ],
                                                    [
                                                        [
                                                            0.0,
                                                            0.0
                                                        ]
                                                    ]
                                                ],
                                                "changes_shape": false,
                                                "execute_until_finished": true,
                                                "max_executions_before_finished": 1000,
                                                "has_initializers": false,
                                                "enable_output_type_conversion": false,
                                                "metric": "energy",
                                                "normalize": false,
                                                "function_stateful_params": {}
                                            }
                                        }
                                    },
                                    "metric": "energy",
                                    "matrix": [
                                        [
                                            0,
                                            -2.5
                                        ],
                                        [
                                            -2.5,
                                            0
                                        ]
                                    ],
                                    "transfer_fct": null,
                                    "normalize": false,
                                    "function_stateful_params": {}
                                }
                            }
                        },
                        "output_ports": {
                            "Conflict_Monitor_OUTCOME": {
                                "value": "Stability_Function_0",
                                "metadata": {
                                    "type": "OutputPort",
                                    "variable": [
                                        -0.0
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "require_projection_in_composition": true,
                                    "projections": null
                                }
                            }
                        }
                    },
                    "CONTROL": {
                        "metadata": {
                            "type": "ControlMechanism",
                            "input_port_variables": null,
                            "output_labels_dict": {},
                            "variable": [
                                [
                                    1.0
                                ]
                            ],
                            "execute_until_finished": true,
                            "has_initializers": false,
                            "outcome": null,
                            "modulation": "multiplicative_param",
                            "simulation_ids": [],
                            "max_executions_before_finished": 1000,
                            "input_labels_dict": {},
                            "net_outcome": null,
                            "control_signal_costs": null,
                            "input_ports": [
                                "OUTCOME"
                            ],
                            "outcome_input_ports": "[(InputPort OUTCOME)]",
                            "costs": null,
                            "compute_net_outcome": "gANjZGlsbC5fZGlsbApfY3JlYXRlX2Z1bmN0aW9uCnEAKGNkaWxsLl9kaWxsCl9jcmVhdGVfY29k\nZQpxAShLAksASwJLAktDQwh8AHwBGABTAHECToVxAylYBwAAAG91dGNvbWVxBFgEAAAAY29zdHEF\nhnEGWGwAAAAvaG9tZS9rYXRoZXJpbmUvY29kZS9Qc3lOZXVMaW5rL3BzeW5ldWxpbmsvY29yZS9j\nb21wb25lbnRzL21lY2hhbmlzbXMvbW9kdWxhdG9yeS9jb250cm9sL2NvbnRyb2xtZWNoYW5pc20u\ncHlxB1gIAAAAPGxhbWJkYT5xCE2cBEMAcQkpKXRxClJxC2Nwc3luZXVsaW5rLmNvcmUuY29tcG9u\nZW50cy5tZWNoYW5pc21zLm1vZHVsYXRvcnkuY29udHJvbC5jb250cm9sbWVjaGFuaXNtCl9fZGlj\ndF9fCmgITk59cQxOdHENUnEOLg==\n",
                            "objective_mechanism": {
                                "Conflict_Monitor": {
                                    "metadata": {
                                        "type": "ObjectiveMechanism",
                                        "output_labels_dict": {},
                                        "variable": [
                                            [
                                                0.0,
                                                0.0
                                            ]
                                        ],
                                        "input_port_variables": null,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "input_labels_dict": {},
                                        "has_initializers": false,
                                        "output_ports": [
                                            "OUTCOME"
                                        ],
                                        "input_ports": [
                                            {
                                                "OUTPUT": {
                                                    "metadata": {
                                                        "type": "ProcessingMechanism",
                                                        "output_labels_dict": {},
                                                        "variable": [
                                                            [
                                                                0.0,
                                                                0.0
                                                            ]
                                                        ],
                                                        "input_port_variables": null,
                                                        "execute_until_finished": true,
                                                        "max_executions_before_finished": 1000,
                                                        "input_labels_dict": {},
                                                        "has_initializers": false,
                                                        "output_ports": null,
                                                        "input_ports": null
                                                    },
                                                    "input_ports": {
                                                        "OUTPUT_input_port_MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                                                            "shape": "(2,)",
                                                            "type": "float64"
                                                        },
                                                        "OUTPUT_input_port_MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                                                            "shape": "(2,)",
                                                            "type": "float64"
                                                        }
                                                    },
                                                    "functions": {
                                                        "OUTPUT_input_combination_function": {
                                                            "function": {
                                                                "onnx::ReduceSum": {
                                                                    "data": "combination_function_input_data",
                                                                    "axes": 0
                                                                }
                                                            },
                                                            "args": {
                                                                "data": "combination_function_input_data",
                                                                "axes": 0
                                                            }
                                                        },
                                                        "OUTPUT_input_combination_function_dimreduce": {
                                                            "value": "OUTPUT_input_combination_function[0][0]",
                                                            "args": {
                                                                "variable0": "OUTPUT_input_combination_function"
                                                            }
                                                        },
                                                        "Logistic_Function_1": {
                                                            "function": {
                                                                "logistic": {
                                                                    "offset": 0.0,
                                                                    "gain": 1.0,
                                                                    "scale": 1.0,
                                                                    "x_0": 0,
                                                                    "bias": 0.0,
                                                                    "variable0": "OUTPUT_input_combination_function_dimreduce"
                                                                }
                                                            },
                                                            "args": {
                                                                "offset": 0.0,
                                                                "gain": 1.0,
                                                                "scale": 1.0,
                                                                "x_0": 0,
                                                                "bias": 0.0,
                                                                "variable0": "OUTPUT_input_combination_function_dimreduce"
                                                            },
                                                            "metadata": {
                                                                "type": "Logistic",
                                                                "variable": [
                                                                    [
                                                                        0.0,
                                                                        0.0
                                                                    ]
                                                                ],
                                                                "execute_until_finished": true,
                                                                "has_initializers": false,
                                                                "enable_output_type_conversion": true,
                                                                "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                                                "changes_shape": false,
                                                                "max_executions_before_finished": 1000,
                                                                "bounds": [
                                                                    0,
                                                                    1
                                                                ],
                                                                "function_stateful_params": {}
                                                            }
                                                        }
                                                    },
                                                    "parameters": {
                                                        "combination_function_input_data": {
                                                            "value": "[OUTPUT_input_port_MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_, OUTPUT_input_port_MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_]"
                                                        }
                                                    },
                                                    "output_ports": {
                                                        "OUTPUT_OutputPort_0": {
                                                            "value": "Logistic_Function_1",
                                                            "metadata": {
                                                                "type": "OutputPort",
                                                                "variable": [
                                                                    0.5,
                                                                    0.5
                                                                ],
                                                                "execute_until_finished": true,
                                                                "max_executions_before_finished": 1000,
                                                                "has_initializers": false,
                                                                "require_projection_in_composition": true,
                                                                "projections": null
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "input_ports": {
                                        "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_": {
                                            "shape": "(1, 2)",
                                            "type": "float64",
                                            "metadata": {
                                                "type": "InputPort",
                                                "shadow_inputs": null,
                                                "variable": [
                                                    [
                                                        0.0,
                                                        0.0
                                                    ]
                                                ],
                                                "execute_until_finished": true,
                                                "max_executions_before_finished": 1000,
                                                "has_initializers": false,
                                                "internal_only": true,
                                                "require_projection_in_composition": true,
                                                "exponent": null,
                                                "default_input": null,
                                                "combine": null,
                                                "projections": [
                                                    [
                                                        "OUTPUT.output_ports.OutputPort-0",
                                                        null,
                                                        null,
                                                        {
                                                            "PROJECTION_TYPE": "MappingProjection"
                                                        }
                                                    ]
                                                ],
                                                "weight": null
                                            }
                                        }
                                    },
                                    "functions": {
                                        "Stability_Function_0": {
                                            "function": {
                                                "energy": {
                                                    "variable0": "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_"
                                                }
                                            },
                                            "args": {
                                                "variable0": "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_"
                                            },
                                            "metadata": {
                                                "type": "Energy",
                                                "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                                "variable": [
                                                    [
                                                        0.0,
                                                        0.0
                                                    ]
                                                ],
                                                "changes_shape": false,
                                                "execute_until_finished": true,
                                                "max_executions_before_finished": 1000,
                                                "has_initializers": false,
                                                "enable_output_type_conversion": true,
                                                "metric_fct": {
                                                    "Distance_Function_4": {
                                                        "function": {
                                                            "distance": {}
                                                        },
                                                        "args": {},
                                                        "metadata": {
                                                            "type": "Distance",
                                                            "output_type": "FunctionOutputType.DEFAULT",
                                                            "variable": [
                                                                [
                                                                    [
                                                                        0.0,
                                                                        0.0
                                                                    ]
                                                                ],
                                                                [
                                                                    [
                                                                        0.0,
                                                                        0.0
                                                                    ]
                                                                ]
                                                            ],
                                                            "changes_shape": false,
                                                            "execute_until_finished": true,
                                                            "max_executions_before_finished": 1000,
                                                            "has_initializers": false,
                                                            "enable_output_type_conversion": false,
                                                            "metric": "energy",
                                                            "normalize": false,
                                                            "function_stateful_params": {}
                                                        }
                                                    }
                                                },
                                                "metric": "energy",
                                                "matrix": [
                                                    [
                                                        0,
                                                        -2.5
                                                    ],
                                                    [
                                                        -2.5,
                                                        0
                                                    ]
                                                ],
                                                "transfer_fct": null,
                                                "normalize": false,
                                                "function_stateful_params": {}
                                            }
                                        }
                                    },
                                    "output_ports": {
                                        "Conflict_Monitor_OUTCOME": {
                                            "value": "Stability_Function_0",
                                            "metadata": {
                                                "type": "OutputPort",
                                                "variable": [
                                                    -0.0
                                                ],
                                                "execute_until_finished": true,
                                                "max_executions_before_finished": 1000,
                                                "has_initializers": false,
                                                "require_projection_in_composition": true,
                                                "projections": null
                                            }
                                        }
                                    }
                                }
                            },
                            "output_ports": [
                                {
                                    "name": "gain",
                                    "MECHANISM": {
                                        "TASK": {
                                            "metadata": {
                                                "type": "LCAMechanism",
                                                "input_port_variables": null,
                                                "output_labels_dict": {},
                                                "variable": [
                                                    [
                                                        0.0,
                                                        0.0
                                                    ]
                                                ],
                                                "execute_until_finished": true,
                                                "has_initializers": false,
                                                "termination_measure_value": 0.0,
                                                "max_executions_before_finished": 1000,
                                                "input_labels_dict": {},
                                                "input_ports": null,
                                                "matrix": "InverseHollowMatrix",
                                                "integrator_function": {
                                                    "LeakyCompetingIntegrator_Function_0": {
                                                        "value": "previous_value + (-rate * previous_value + variable0) * time_step_size + noise * (time_step_size ** 0.5)",
                                                        "args": {
                                                            "time_step_size": 0.1,
                                                            "offset": 0.0,
                                                            "rate": 0.5,
                                                            "noise": 0.0
                                                        },
                                                        "metadata": {
                                                            "type": "LeakyCompetingIntegrator",
                                                            "initializer": [
                                                                [
                                                                    0.5,
                                                                    0.5
                                                                ]
                                                            ],
                                                            "variable": [
                                                                [
                                                                    0.0,
                                                                    0.0
                                                                ]
                                                            ],
                                                            "execute_until_finished": true,
                                                            "has_initializers": true,
                                                            "enable_output_type_conversion": false,
                                                            "output_type": "FunctionOutputType.DEFAULT",
                                                            "changes_shape": false,
                                                            "max_executions_before_finished": 1000,
                                                            "function_stateful_params": {
                                                                "previous_value": {
                                                                    "id": "previous_value",
                                                                    "default_initial_value": [
                                                                        [
                                                                            0.5,
                                                                            0.5
                                                                        ]
                                                                    ],
                                                                    "value": "LeakyCompetingIntegrator_Function_0"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "combination_function": {
                                                    "LinearCombination_Function_23": {
                                                        "function": {
                                                            "linearcombination": {
                                                                "offset": 0.0,
                                                                "scale": 1.0
                                                            }
                                                        },
                                                        "args": {
                                                            "offset": 0.0,
                                                            "scale": 1.0
                                                        },
                                                        "metadata": {
                                                            "type": "LinearCombination",
                                                            "variable": [
                                                                [
                                                                    0.0,
                                                                    0.0
                                                                ]
                                                            ],
                                                            "execute_until_finished": true,
                                                            "has_initializers": false,
                                                            "enable_output_type_conversion": false,
                                                            "output_type": "FunctionOutputType.DEFAULT",
                                                            "changes_shape": false,
                                                            "max_executions_before_finished": 1000,
                                                            "exponents": null,
                                                            "weights": null,
                                                            "operation": "sum",
                                                            "function_stateful_params": {}
                                                        }
                                                    }
                                                },
                                                "integrator_mode": true,
                                                "has_recurrent_input_port": false,
                                                "on_resume_integrator_mode": "current_value",
                                                "clip": null,
                                                "output_ports": [
                                                    "RESULTS"
                                                ],
                                                "enable_learning": false,
                                                "integrator_function_value": [
                                                    [
                                                        0
                                                    ]
                                                ],
                                                "termination_comparison_op": ">=",
                                                "termination_threshold": null,
                                                "termination_measure": "max"
                                            },
                                            "input_ports": {
                                                "TASK_input_port_TASK_recurrent_projection": {
                                                    "shape": "(2,)",
                                                    "type": "float64"
                                                },
                                                "TASK_input_port_MappingProjection_from_task_input_OutputPort_0__to_TASK_InputPort_0_": {
                                                    "shape": "(2,)",
                                                    "type": "float64"
                                                }
                                            },
                                            "functions": {
                                                "TASK_input_combination_function": {
                                                    "function": {
                                                        "onnx::ReduceSum": {
                                                            "data": "combination_function_input_data",
                                                            "axes": 0
                                                        }
                                                    },
                                                    "args": {
                                                        "data": "combination_function_input_data",
                                                        "axes": 0
                                                    }
                                                },
                                                "TASK_input_combination_function_dimreduce": {
                                                    "value": "TASK_input_combination_function[0][0]",
                                                    "args": {
                                                        "variable0": "TASK_input_combination_function"
                                                    }
                                                },
                                                "Logistic_Function_5": {
                                                    "function": {
                                                        "logistic": {
                                                            "offset": 0.0,
                                                            "gain": 1.0,
                                                            "scale": 1.0,
                                                            "x_0": 0,
                                                            "bias": 0.0,
                                                            "variable0": "LeakyCompetingIntegrator_Function_0"
                                                        }
                                                    },
                                                    "args": {
                                                        "offset": 0.0,
                                                        "gain": 1.0,
                                                        "scale": 1.0,
                                                        "x_0": 0,
                                                        "bias": 0.0,
                                                        "variable0": "LeakyCompetingIntegrator_Function_0"
                                                    },
                                                    "metadata": {
                                                        "type": "Logistic",
                                                        "variable": [
                                                            [
                                                                0.0,
                                                                0.0
                                                            ]
                                                        ],
                                                        "execute_until_finished": true,
                                                        "has_initializers": false,
                                                        "enable_output_type_conversion": true,
                                                        "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                                        "changes_shape": false,
                                                        "max_executions_before_finished": 1000,
                                                        "bounds": [
                                                            0,
                                                            1
                                                        ],
                                                        "function_stateful_params": {}
                                                    }
                                                },
                                                "LeakyCompetingIntegrator_Function_0": {
                                                    "value": "previous_value + (-0.5 * previous_value + TASK_input_combination_function_dimreduce) * 0.1 + 0.0 * (0.1 ** 0.5)",
                                                    "args": {
                                                        "time_step_size": 0.1,
                                                        "offset": 0.0,
                                                        "rate": 0.5,
                                                        "noise": 0.0,
                                                        "variable0": "TASK_input_combination_function_dimreduce"
                                                    },
                                                    "metadata": {
                                                        "type": "LeakyCompetingIntegrator",
                                                        "initializer": [
                                                            [
                                                                0.5,
                                                                0.5
                                                            ]
                                                        ],
                                                        "variable": [
                                                            [
                                                                0.0,
                                                                0.0
                                                            ]
                                                        ],
                                                        "execute_until_finished": true,
                                                        "has_initializers": true,
                                                        "enable_output_type_conversion": false,
                                                        "output_type": "FunctionOutputType.DEFAULT",
                                                        "changes_shape": false,
                                                        "max_executions_before_finished": 1000,
                                                        "function_stateful_params": {
                                                            "previous_value": {
                                                                "id": "previous_value",
                                                                "default_initial_value": [
                                                                    [
                                                                        0.5,
                                                                        0.5
                                                                    ]
                                                                ],
                                                                "value": "LeakyCompetingIntegrator_Function_0"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "parameters": {
                                                "hetero": {
                                                    "value": -1.0
                                                },
                                                "smoothing_factor": {
                                                    "value": 0.5
                                                },
                                                "auto": {
                                                    "value": 0.0
                                                },
                                                "competition": {
                                                    "value": 1.0
                                                },
                                                "combination_function_input_data": {
                                                    "value": "[TASK_input_port_TASK_recurrent_projection, TASK_input_port_MappingProjection_from_task_input_OutputPort_0__to_TASK_InputPort_0_]"
                                                },
                                                "previous_value": {
                                                    "default_initial_value": [
                                                        [
                                                            0.5,
                                                            0.5
                                                        ]
                                                    ],
                                                    "value": "LeakyCompetingIntegrator_Function_0"
                                                }
                                            },
                                            "output_ports": {
                                                "TASK_RESULT": {
                                                    "value": "Logistic_Function_5",
                                                    "metadata": {
                                                        "type": "OutputPort",
                                                        "variable": [
                                                            0.5,
                                                            0.5
                                                        ],
                                                        "execute_until_finished": true,
                                                        "max_executions_before_finished": 1000,
                                                        "has_initializers": false,
                                                        "require_projection_in_composition": true,
                                                        "projections": null
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ],
                            "default_allocation": [
                                0.5
                            ],
                            "reconfiguration_cost": null,
                            "outcome_input_ports_option": "separate",
                            "combine_costs": "gANjbnVtcHkKc3VtCnEALg==\n",
                            "compute_reconfiguration_cost": null,
                            "monitor_for_control": []
                        },
                        "input_ports": {
                            "CONTROL_OUTCOME": {
                                "shape": "(1,)",
                                "type": "float64",
                                "metadata": {
                                    "type": "InputPort",
                                    "shadow_inputs": null,
                                    "variable": [
                                        0.0
                                    ],
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "internal_only": true,
                                    "require_projection_in_composition": true,
                                    "exponent": null,
                                    "default_input": null,
                                    "combine": null,
                                    "projections": null,
                                    "weight": null
                                }
                            }
                        },
                        "functions": {
                            "Default_Control_Function_0": {
                                "function": {
                                    "defaultallocationfunction": {
                                        "num_control_signals": 1,
                                        "variable0": "CONTROL_OUTCOME"
                                    }
                                },
                                "args": {
                                    "num_control_signals": 1,
                                    "variable0": "CONTROL_OUTCOME"
                                },
                                "metadata": {
                                    "type": "DefaultAllocationFunction",
                                    "output_type": "FunctionOutputType.NP_2D_ARRAY",
                                    "variable": [
                                        [
                                            1.0
                                        ]
                                    ],
                                    "changes_shape": false,
                                    "execute_until_finished": true,
                                    "max_executions_before_finished": 1000,
                                    "has_initializers": false,
                                    "enable_output_type_conversion": true,
                                    "function_stateful_params": {}
                                }
                            }
                        },
                        "output_ports": {
                            "CONTROL_TASK_gain__ControlSignal": {
                                "value": "Default_Control_Function_0",
                                "metadata": {
                                    "type": "ControlSignal",
                                    "require_projection_in_composition": true,
                                    "variable": [
                                        0.5
                                    ],
                                    "execute_until_finished": true,
                                    "has_initializers": false,
                                    "max_executions_before_finished": 1000,
                                    "projections": [
                                        [
                                            "TASK.input_ports.gain",
                                            null,
                                            null,
                                            {
                                                "PROJECTION_TYPE": "ControlProjection"
                                            }
                                        ]
                                    ],
                                    "modulation": "multiplicative_param",
                                    "allocation_samples": null
                                }
                            }
                        }
                    }
                },
                "edges": {
                    "MappingProjection_from_color_input_OutputPort_0__to_color_hidden_InputPort_0_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "color_input",
                        "receiver": "color_hidden",
                        "sender_port": "color_input_OutputPort_0",
                        "receiver_port": "color_hidden_input_port_MappingProjection_from_color_input_OutputPort_0__to_color_hidden_InputPort_0_",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_3": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    2.0,
                                                    -2.0
                                                ],
                                                [
                                                    -2.0,
                                                    2.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                2.0,
                                                -2.0
                                            ],
                                            [
                                                -2.0,
                                                2.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.0,
                                            0.0
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "color_hidden",
                        "receiver": "OUTPUT",
                        "sender_port": "color_hidden_OutputPort_0",
                        "receiver_port": "OUTPUT_input_port_MappingProjection_from_color_hidden_OutputPort_0__to_OUTPUT_InputPort_0_",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_4": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    2.0,
                                                    -2.0
                                                ],
                                                [
                                                    -2.0,
                                                    2.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                2.0,
                                                -2.0
                                            ],
                                            [
                                                -2.0,
                                                2.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.017986209962091562,
                                            0.017986209962091562
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "MappingProjection_from_word_input_OutputPort_0__to_word_hidden_InputPort_0_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "word_input",
                        "receiver": "word_hidden",
                        "sender_port": "word_input_OutputPort_0",
                        "receiver_port": "word_hidden_input_port_MappingProjection_from_word_input_OutputPort_0__to_word_hidden_InputPort_0_",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_7": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    3.0,
                                                    -3.0
                                                ],
                                                [
                                                    -3.0,
                                                    3.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                3.0,
                                                -3.0
                                            ],
                                            [
                                                -3.0,
                                                3.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.0,
                                            0.0
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "word_hidden",
                        "receiver": "OUTPUT",
                        "sender_port": "word_hidden_OutputPort_0",
                        "receiver_port": "OUTPUT_input_port_MappingProjection_from_word_hidden_OutputPort_0__to_OUTPUT_InputPort_0_",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_8": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    3.0,
                                                    -3.0
                                                ],
                                                [
                                                    -3.0,
                                                    3.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                3.0,
                                                -3.0
                                            ],
                                            [
                                                -3.0,
                                                3.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.017986209962091562,
                                            0.017986209962091562
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "MappingProjection_from_task_input_OutputPort_0__to_TASK_InputPort_0_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "task_input",
                        "receiver": "TASK",
                        "sender_port": "task_input_OutputPort_0",
                        "receiver_port": "TASK_input_port_MappingProjection_from_task_input_OutputPort_0__to_TASK_InputPort_0_",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_10": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    1.0,
                                                    0.0
                                                ],
                                                [
                                                    0.0,
                                                    1.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                1.0,
                                                0.0
                                            ],
                                            [
                                                0.0,
                                                1.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.0,
                                            0.0
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "MappingProjection_from_TASK_RESULT__to_color_hidden_InputPort_0_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "TASK",
                        "receiver": "color_hidden",
                        "sender_port": "TASK_RESULT",
                        "receiver_port": "color_hidden_input_port_MappingProjection_from_TASK_RESULT__to_color_hidden_InputPort_0_",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_11": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    4.0,
                                                    4.0
                                                ],
                                                [
                                                    0.0,
                                                    0.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                4.0,
                                                4.0
                                            ],
                                            [
                                                0.0,
                                                0.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.5,
                                            0.5
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "MappingProjection_from_TASK_RESULT__to_word_hidden_InputPort_0_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "TASK",
                        "receiver": "word_hidden",
                        "sender_port": "TASK_RESULT",
                        "receiver_port": "word_hidden_input_port_MappingProjection_from_TASK_RESULT__to_word_hidden_InputPort_0_",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_13": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    0.0,
                                                    0.0
                                                ],
                                                [
                                                    4.0,
                                                    4.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                0.0,
                                                0.0
                                            ],
                                            [
                                                4.0,
                                                4.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.5,
                                            0.5
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "MappingProjection_from_OUTPUT_OutputPort_0__to_DECISION_ARRAY_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "OUTPUT",
                        "receiver": "DECISION",
                        "sender_port": "OUTPUT_OutputPort_0",
                        "receiver_port": "DECISION_ARRAY",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_14": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    1.0,
                                                    0.0
                                                ],
                                                [
                                                    0.0,
                                                    1.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                1.0,
                                                0.0
                                            ],
                                            [
                                                0.0,
                                                1.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.5,
                                            0.5
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "MappingProjection_from_OUTPUT_OutputPort_0__to_Conflict_Monitor_InputPort_0_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "OUTPUT",
                        "receiver": "Conflict_Monitor",
                        "sender_port": "OUTPUT_OutputPort_0",
                        "receiver_port": "Conflict_Monitor_Value_of_OUTPUT__OutputPort_0_",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_1": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    1.0,
                                                    0.0
                                                ],
                                                [
                                                    0.0,
                                                    1.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                1.0,
                                                0.0
                                            ],
                                            [
                                                0.0,
                                                1.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.5,
                                            0.5
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "MappingProjection_from_Conflict_Monitor_OUTCOME__to_CONTROL_OUTCOME_": {
                        "parameters": {
                            "weight": 1
                        },
                        "sender": "Conflict_Monitor",
                        "receiver": "CONTROL",
                        "sender_port": "Conflict_Monitor_OUTCOME",
                        "receiver_port": "CONTROL_OUTCOME",
                        "metadata": {
                            "type": "MappingProjection",
                            "execute_until_finished": true,
                            "max_executions_before_finished": 1000,
                            "has_initializers": false,
                            "exponent": null,
                            "weight": null,
                            "functions": {
                                "LinearMatrix_Function_2": {
                                    "function": {
                                        "onnx::MatMul": {
                                            "B": [
                                                [
                                                    1.0
                                                ]
                                            ]
                                        }
                                    },
                                    "args": {
                                        "B": [
                                            [
                                                1.0
                                            ]
                                        ]
                                    },
                                    "metadata": {
                                        "type": "LinearMatrix",
                                        "output_type": "FunctionOutputType.DEFAULT",
                                        "A": [
                                            0.0
                                        ],
                                        "changes_shape": false,
                                        "execute_until_finished": true,
                                        "max_executions_before_finished": 1000,
                                        "has_initializers": false,
                                        "enable_output_type_conversion": false,
                                        "bounds": null,
                                        "function_stateful_params": {}
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
